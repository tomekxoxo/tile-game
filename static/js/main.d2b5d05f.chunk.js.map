{"version":3,"sources":["components/Box.js","store/actions/actions.js","store/actions/actionTypes.js","components/Score.js","components/Board.js","App.js","serviceWorker.js","store/reducer/reducer.js","index.js"],"names":["StyledBox","styled","div","props","color","connect","state","rows","cols","blockArr","score","dispatch","onDelete","id","arr","initialColor","type","checkForNeighbours","array","stack","length","currElementId","newStack","newArray","checked","undefined","push","shift","move","actions","onUpdateScore","prevScore","forEach","element","Math","floor","random","onMoveBlocksDown","i","tempColor","onGenerateNewBlocks","colors","randColor","useState","setId","useEffect","onClick","StyledScore","StyledBoard","blockarr","onPopulateBoard","qt","res","blocks","map","key","Fragment","StyledApp","App","Boolean","window","location","hostname","match","initialState","reducer","action","composeEnhancers","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d2b5d05f.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../store/actions/index\";\r\n\r\nconst StyledBox = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 50px;\r\n  height: 50px;\r\n  background-color: ${(props) => props.color && props.color};\r\n  cursor: pointer;\r\n  &:hover {\r\n    transform: scale(1.08);\r\n  }\r\n  @media screen and (max-width: 768px) {\r\n    width: 25px;\r\n    height: 25px;\r\n  }\r\n`;\r\n\r\nconst Box = (props) => {\r\n  const [id, setId] = useState(null);\r\n\r\n  useEffect(() => {\r\n    setId(props.id);\r\n  }, []);\r\n\r\n  const clickHandler = () => {\r\n    props.onDelete(id, props.blockArr);\r\n    props.onUpdateScore(props.blockArr, props.score);\r\n    props.onMoveBlocksDown(props.blockArr);\r\n    props.onGenerateNewBlocks(props.blockArr);\r\n    \r\n  }\r\n  \r\n  return (\r\n    <StyledBox\r\n      color={props.color}\r\n      onClick={clickHandler}\r\n    >\r\n    </StyledBox>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    rows: state.rows,\r\n    cols: state.cols,\r\n    blockArr: state.blockArr,\r\n    score: state.score,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onDelete: (id, arr, score) => {\r\n      dispatch(actions.deleteBox(id, arr, score));\r\n    },\r\n    onUpdateScore: (arr, prevScore) => {\r\n      dispatch(actions.updateScore(arr, prevScore));\r\n    },\r\n    onMoveBlocksDown: (arr) => {\r\n      dispatch(actions.moveBlocksDown(arr));\r\n    },\r\n    onGenerateNewBlocks: (arr) => {\r\n      dispatch(actions.generateNewBlocks(arr));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Box);\r\n","import * as actionTypes from \"./actionTypes\";\r\n\r\nexport const populateBoard = (rows, cols) => {\r\n  const qt = rows * cols;\r\n  let res = [];\r\n  const colors = [\"#9e5613\", \"#133d8a\", \"#72caed\", \"#f7c95c\", \"#705496\"];\r\n\r\n  for (let i = 0; i < qt; i++) {\r\n    const randColor = Math.floor(Math.random() * 5);\r\n    res.push({ id: i, color: colors[randColor] });\r\n  }\r\n  return { type: actionTypes.POPULATE_BOARD, arr: res };\r\n};\r\n\r\nexport const moveBlocksDown = (arr) => {\r\n  for (let i = arr.length - 1; i >= 0; i--) {\r\n    if (arr[i].color == \"transparent\") {\r\n      if (arr[i - 12] != undefined && arr[i - 12].color !== \"transparent\") {\r\n        const tempColor = arr[i - 12].color;\r\n        arr[i - 12].color = \"transparent\";\r\n        arr[i].color = tempColor;\r\n      } else if (\r\n        arr[i - 12 * 2] != undefined &&\r\n        arr[i - 12 * 2].color !== \"transparent\"\r\n      ) {\r\n        const tempColor = arr[i - 12 * 2].color;\r\n        arr[i - 12 * 2].color = \"transparent\";\r\n        arr[i].color = tempColor;\r\n      } else if (\r\n        arr[i - 12 * 3] != undefined &&\r\n        arr[i - 12 * 3].color !== \"transparent\"\r\n      ) {\r\n        const tempColor = arr[i - 12 * 3].color;\r\n        arr[i - 12 * 3].color = \"transparent\";\r\n        arr[i].color = tempColor;\r\n      } else if (\r\n        arr[i - 12 * 4] != undefined &&\r\n        arr[i - 12 * 4].color !== \"transparent\"\r\n      ) {\r\n        const tempColor = arr[i - 12 * 4].color;\r\n        arr[i - 12 * 4].color = \"transparent\";\r\n        arr[i].color = tempColor;\r\n      }\r\n    }\r\n  }\r\n  return {\r\n    type: actionTypes.MOVE_BLOCKS_DOWN,\r\n    arr: arr,\r\n    move: Math.floor(Math.random()),\r\n  };\r\n};\r\n\r\nexport const deleteBox = (id, arr) => {\r\n  const initialColor = arr[id].color;\r\n  const checkForNeighbours = (array, stack) => {\r\n    if (stack.length > 0) {\r\n      const currElementId = stack[0];\r\n      let newStack = stack;\r\n      let newArray = array;\r\n      let checked = false;\r\n\r\n      if (\r\n        array[currElementId - 12] !== undefined &&\r\n        array[currElementId - 12].color == initialColor\r\n      ) {\r\n        newStack.push(currElementId - 12);\r\n\r\n        newArray[currElementId].color = \"transparent\";\r\n        newArray[currElementId - 12].color = \"transparent\";\r\n        checked = true;\r\n      }\r\n      if (\r\n        array[currElementId + 12] !== undefined &&\r\n        array[currElementId + 12].color == initialColor\r\n      ) {\r\n        newStack.push(currElementId + 12);\r\n\r\n        newArray[currElementId].color = \"transparent\";\r\n        newArray[currElementId + 12].color = \"transparent\";\r\n        checked = true;\r\n      }\r\n      if (\r\n        array[currElementId - 1] !== undefined &&\r\n        array[currElementId - 1].id !== 11 &&\r\n        array[currElementId - 1].id !== 23 &&\r\n        array[currElementId - 1].id !== 35 &&\r\n        array[currElementId - 1].id !== 47 &&\r\n        array[currElementId - 1].color == initialColor\r\n      ) {\r\n        newStack.push(currElementId - 1);\r\n\r\n        newArray[currElementId].color = \"transparent\";\r\n        newArray[currElementId - 1].color = \"transparent\";\r\n        checked = true;\r\n      }\r\n      if (\r\n        array[currElementId + 1] !== undefined &&\r\n        array[currElementId + 1].id !== 12 &&\r\n        array[currElementId + 1].id !== 24 &&\r\n        array[currElementId + 1].id !== 36 &&\r\n        array[currElementId + 1].id !== 48 &&\r\n        array[currElementId + 1].color == initialColor\r\n      ) {\r\n        newStack.push(currElementId + 1);\r\n        newArray[currElementId].color = \"transparent\";\r\n        newArray[currElementId + 1].color = \"transparent\";\r\n        checked = true;\r\n      }\r\n\r\n      if (checked) {\r\n        newStack.shift();\r\n        return checkForNeighbours(newArray, newStack);\r\n      } else {\r\n        return array;\r\n      }\r\n    } else {\r\n      return array;\r\n    }\r\n  };\r\n  const x = checkForNeighbours(arr, [id]);\r\n\r\n  return { type: actionTypes.BOX_DELETE, arr: x, move: id };\r\n};\r\n\r\nexport const generateNewBlocks = (arr) => {\r\n  const colors = [\"#9e5613\", \"#133d8a\", \"#72caed\", \"#f7c95c\", \"#705496\"];\r\n\r\n  arr.forEach((element) => {\r\n    if (element.color == \"transparent\") {\r\n      const randColor = Math.floor(Math.random() * 5);\r\n      element.color = colors[randColor];\r\n    }\r\n  });\r\n\r\n  return {\r\n    type: actionTypes.GENERATE_NEW_BLOCKS,\r\n    arr: arr,\r\n    move: Math.floor(Math.random()),\r\n  };\r\n};\r\n\r\nexport const updateScore = (arr, prevScore) => {\r\n  let score = prevScore;\r\n\r\n  arr.forEach((element) => {\r\n    if (element.color == \"transparent\") {\r\n      score += 1;\r\n    }\r\n  });\r\n\r\n  return {\r\n    type: actionTypes.UPDATE_SCORE,\r\n    score: score,\r\n    move: Math.floor(Math.random()),\r\n  };\r\n};\r\n","export const POPULATE_BOARD = 'POPULATE_BOARD';\r\nexport const BOX_DELETE = 'BOX_DELETE';\r\nexport const UPDATE_SCORE = 'UPDATE_SCORE';\r\nexport const MOVE_BLOCKS_DOWN = 'MOVE_BLOCKS_DOWN';\r\nexport const GENERATE_NEW_BLOCKS = 'GENERATE_NEW_BLOCKS';\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst StyledScore = styled.div`\r\n  p {\r\n    color: #000;\r\n    font-size: 2.2rem;\r\n  }\r\n`;\r\n\r\nconst Score = (props) => {\r\n  return (\r\n    <StyledScore>\r\n      <p>score:{props.score}</p>\r\n    </StyledScore>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    score: state.score,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(Score);\r\n","import React, { useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { connect } from \"react-redux\";\r\nimport Box from \"./Box\";\r\nimport * as actions from \"../store/actions/index\";\r\nimport Score from \"./Score\";\r\n\r\nconst StyledBoard = styled.div`\r\n  display: grid;\r\n  grid-gap: 2px;\r\n  grid-template-columns: repeat(\r\n    ${(props) => (props.cols ? props.cols : null)},\r\n    1fr\r\n  );\r\n  grid-template-rows: repeat(\r\n    ${(props) => (props.rows ? props.rows : null)},\r\n    1fr\r\n  );\r\n`;\r\n\r\nconst Board = (props) => {\r\n  useEffect(() => {\r\n    props.onPopulateBoard(props.rows, props.cols);\r\n  }, []);\r\n\r\n  let blocks;\r\n\r\n  blocks = props.blockarr.map((element) => {\r\n    return <Box key={element.id} id={element.id} color={element.color} />;\r\n  });\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <StyledBoard rows={props.rows} cols={props.cols}>\r\n        {blocks}\r\n      </StyledBoard>\r\n      <Score />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    rows: state.rows,\r\n    cols: state.cols,\r\n    blockarr: state.blockArr,\r\n    move: state.move,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onPopulateBoard: (rows, cols) => {\r\n      dispatch(actions.populateBoard(rows, cols));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Board);\r\n","import React from 'react';\nimport Board from './components/Board';\nimport styled from \"styled-components\";\n\nconst StyledApp = styled.div`\n  width:100%;\n  height:100vh;\n  display:flex;\n  flex-direction:column;\n  justify-content:center;\n  align-items:center;\n  background-color: #eee;\n`\n\nfunction App() {\n  return (\n    <StyledApp >\n      <Board/>\n    </StyledApp>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as actionTypes from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  rows: 5,\r\n  cols: 12,\r\n  blockArr: [],\r\n  move: null,\r\n  score: 0,\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.POPULATE_BOARD:\r\n      return {\r\n        ...state,\r\n        blockArr: action.arr,\r\n      };\r\n    case actionTypes.BOX_DELETE:\r\n      return {\r\n        ...state,\r\n        blockArr: action.arr,\r\n        move: action.move,\r\n      };\r\n    case actionTypes.UPDATE_SCORE:\r\n      return {\r\n        ...state,\r\n        score: action.score,\r\n        move: action.move,\r\n      };\r\n    case actionTypes.MOVE_BLOCKS_DOWN:\r\n      return {\r\n        ...state,\r\n        blockArr: action.arr,\r\n        move: action.move,\r\n      };\r\n    case actionTypes.GENERATE_NEW_BLOCKS:\r\n      return {\r\n        ...state,\r\n        blockArr: action.arr,\r\n        move: action.move,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport reducer from \"./store/reducer/reducer\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { Provider } from \"react-redux\";\n\nconst composeEnhancers =\n  process.env.NODE_ENV == \"development\"\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    : null || compose;\n\nconst store = createStore(\n  reducer,\n  composeEnhancers(applyMiddleware(thunk))\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}