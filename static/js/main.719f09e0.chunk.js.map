{"version":3,"sources":["store/actions/actions.js","store/actions/actionTypes.js","containers/Box.js","components/Score.js","components/Backdrop.js","containers/Modal.js","containers/Board.js","App.js","serviceWorker.js","store/reducer/reducer.js","index.js"],"names":["colors","populateBoard","rows","cols","qt","res","i","randColor","Math","floor","random","length","push","id","color","type","arr","checkIfCanMove","move","StyledBox","styled","div","props","connect","state","blockArr","score","dispatch","onDelete","initialColor","checkForNeighbours","array","stack","currElementId","newStack","newArray","checked","undefined","shift","actions","onUpdateScore","prevScore","forEach","element","onMoveBlocksDown","tempColor","onGenerateNewBlocks","onCheckIfCanMove","useState","setId","useEffect","onClick","StyledScore","Score","StyledBackdrop","Backdrop","StyledModal","onPopulateBoard","onRestartGame","Fragment","className","StyledBoard","blockarr","blocks","map","key","showModal","StyledApp","App","Boolean","window","location","hostname","match","initialState","reducer","action","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.719f09e0.chunk.js","sourcesContent":["import * as actionTypes from \"./actionTypes\";\r\n\r\nconst colors = [\r\n  \"#9e5613\",\r\n  \"#133d8a\",\r\n  \"#72caed\",\r\n  \"#f7c95c\",\r\n  \"#705496\",\r\n  \"yellow\",\r\n  \"grey\",\r\n  \"pink\",\r\n  \"orange\",\r\n  \"purple\",\r\n];\r\n\r\nexport const populateBoard = (rows, cols) => {\r\n  const qt = rows * cols;\r\n  let res = [];\r\n\r\n  for (let i = 0; i < qt; i++) {\r\n    const randColor = Math.floor(Math.random() * colors.length);\r\n    res.push({ id: i, color: colors[randColor] });\r\n  }\r\n  return { type: actionTypes.POPULATE_BOARD, arr: res };\r\n};\r\n\r\nexport const moveBlocksDown = (arr, cols) => {\r\n  for (let i = arr.length - 1; i >= 0; i--) {\r\n    if (arr[i].color === \"transparent\") {\r\n      if (\r\n        arr[i - cols] !== undefined &&\r\n        arr[i - cols].color !== \"transparent\"\r\n      ) {\r\n        const tempColor = arr[i - cols].color;\r\n        arr[i - cols].color = \"transparent\";\r\n        arr[i].color = tempColor;\r\n      } else if (\r\n        arr[i - cols * 2] !== undefined &&\r\n        arr[i - cols * 2].color !== \"transparent\"\r\n      ) {\r\n        const tempColor = arr[i - cols * 2].color;\r\n        arr[i - cols * 2].color = \"transparent\";\r\n        arr[i].color = tempColor;\r\n      } else if (\r\n        arr[i - cols * 3] !== undefined &&\r\n        arr[i - cols * 3].color !== \"transparent\"\r\n      ) {\r\n        const tempColor = arr[i - cols * 3].color;\r\n        arr[i - cols * 3].color = \"transparent\";\r\n        arr[i].color = tempColor;\r\n      } else if (\r\n        arr[i - cols * 4] !== undefined &&\r\n        arr[i - cols * 4].color !== \"transparent\"\r\n      ) {\r\n        const tempColor = arr[i - cols * 4].color;\r\n        arr[i - cols * 4].color = \"transparent\";\r\n        arr[i].color = tempColor;\r\n      }\r\n    }\r\n  }\r\n  return {\r\n    type: actionTypes.MOVE_BLOCKS_DOWN,\r\n    arr: arr,\r\n    move: Math.floor(Math.random()),\r\n  };\r\n};\r\n\r\nexport const deleteBox = (id, arr) => {\r\n  const initialColor = arr[id].color;\r\n  const checkForNeighbours = (array, stack) => {\r\n    if (stack.length > 0) {\r\n      const currElementId = stack[0];\r\n      let newStack = stack;\r\n      let newArray = array;\r\n      let checked = false;\r\n\r\n      if (\r\n        array[currElementId - 12] !== undefined &&\r\n        array[currElementId - 12].color === initialColor\r\n      ) {\r\n        newStack.push(currElementId - 12);\r\n        newArray[currElementId].color = \"transparent\";\r\n        newArray[currElementId - 12].color = \"transparent\";\r\n        checked = true;\r\n      }\r\n      if (\r\n        array[currElementId + 12] !== undefined &&\r\n        array[currElementId + 12].color === initialColor\r\n      ) {\r\n        newStack.push(currElementId + 12);\r\n        newArray[currElementId].color = \"transparent\";\r\n        newArray[currElementId + 12].color = \"transparent\";\r\n        checked = true;\r\n      }\r\n      if (\r\n        array[currElementId - 1] !== undefined &&\r\n        array[currElementId - 1].id !== 11 &&\r\n        array[currElementId - 1].id !== 23 &&\r\n        array[currElementId - 1].id !== 35 &&\r\n        array[currElementId - 1].id !== 47 &&\r\n        array[currElementId - 1].color === initialColor\r\n      ) {\r\n        newStack.push(currElementId - 1);\r\n\r\n        newArray[currElementId].color = \"transparent\";\r\n        newArray[currElementId - 1].color = \"transparent\";\r\n        checked = true;\r\n      }\r\n      if (\r\n        array[currElementId + 1] !== undefined &&\r\n        array[currElementId + 1].id !== 12 &&\r\n        array[currElementId + 1].id !== 24 &&\r\n        array[currElementId + 1].id !== 36 &&\r\n        array[currElementId + 1].id !== 48 &&\r\n        array[currElementId + 1].color === initialColor\r\n      ) {\r\n        newStack.push(currElementId + 1);\r\n        newArray[currElementId].color = \"transparent\";\r\n        newArray[currElementId + 1].color = \"transparent\";\r\n        checked = true;\r\n      }\r\n\r\n      if (checked) {\r\n        newStack.shift();\r\n        return checkForNeighbours(newArray, newStack);\r\n      } else {\r\n        return array;\r\n      }\r\n    } else {\r\n      return array;\r\n    }\r\n  };\r\n  const x = checkForNeighbours(arr, [id]);\r\n\r\n  return { type: actionTypes.BOX_DELETE, arr: x, move: id };\r\n};\r\n\r\nexport const generateNewBlocks = (arr) => {\r\n  arr.forEach((element) => {\r\n    if (element.color === \"transparent\") {\r\n      const randColor = Math.floor(Math.random() * colors.length);\r\n      element.color = colors[randColor];\r\n    }\r\n  });\r\n\r\n  return {\r\n    type: actionTypes.GENERATE_NEW_BLOCKS,\r\n    arr: arr,\r\n    move: Math.floor(Math.random()),\r\n  };\r\n};\r\n\r\nexport const updateScore = (arr, prevScore) => {\r\n  let score = prevScore;\r\n\r\n  arr.forEach((element) => {\r\n    if (element.color === \"transparent\") {\r\n      score += 1;\r\n    }\r\n  });\r\n\r\n  return {\r\n    type: actionTypes.UPDATE_SCORE,\r\n    score: score,\r\n    move: Math.floor(Math.random()),\r\n  };\r\n};\r\n\r\nexport const checkIfCanMove = (arr) => {\r\n  let canMove;\r\n  for (let i = 0; i <= arr.length - 1; i++) {\r\n    if (i >= 12 && arr[i].color === arr[i - 12].color) {\r\n      canMove = true;\r\n      return {\r\n        type: actionTypes.CHECK_IF_CAN_MOVE,\r\n        move: canMove,\r\n      };\r\n    }\r\n    if (i >= 1 && arr[i].color === arr[i - 1].color) {\r\n      if (i !== 12 && i !== 24 && i !== 36 && i !== 48) {\r\n        canMove = true;\r\n        return {\r\n          type: actionTypes.CHECK_IF_CAN_MOVE,\r\n          move: canMove,\r\n        };\r\n      }\r\n    }\r\n  }\r\n  canMove = false;\r\n  return {\r\n    type: actionTypes.CHECK_IF_CAN_MOVE,\r\n    move: canMove,\r\n  };\r\n};\r\n\r\nexport const restartGame = () => {\r\n  return { type: actionTypes.RESTART_GAME };\r\n};\r\n","export const POPULATE_BOARD = \"POPULATE_BOARD\";\r\nexport const BOX_DELETE = \"BOX_DELETE\";\r\nexport const UPDATE_SCORE = \"UPDATE_SCORE\";\r\nexport const MOVE_BLOCKS_DOWN = \"MOVE_BLOCKS_DOWN\";\r\nexport const GENERATE_NEW_BLOCKS = \"GENERATE_NEW_BLOCKS\";\r\nexport const CHECK_IF_CAN_MOVE = \"CHECK_IF_CAN_MOVE\";\r\nexport const RESTART_GAME = \"RESTART_GAME\";\r\n","import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../store/actions/index\";\r\n\r\nconst StyledBox = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 50px;\r\n  height: 50px;\r\n  background-color: ${(props) => props.color && props.color};\r\n  cursor: pointer;\r\n  &:hover {\r\n    transform: scale(1.08);\r\n  }\r\n  @media screen and (max-width: 768px) {\r\n    width: 25px;\r\n    height: 25px;\r\n  }\r\n`;\r\n\r\nconst Box = (props) => {\r\n  const {\r\n    onDelete,\r\n    onUpdateScore,\r\n    onMoveBlocksDown,\r\n    onGenerateNewBlocks,\r\n    onCheckIfCanMove,\r\n    blockArr,\r\n    score,\r\n    cols,\r\n  } = props;\r\n\r\n  const [id, setId] = useState(null);\r\n\r\n  useEffect(() => {\r\n    setId(props.id);\r\n  }, []);\r\n\r\n  const clickHandler = () => {\r\n    onDelete(id, blockArr);\r\n    onUpdateScore(blockArr, score);\r\n    onMoveBlocksDown(blockArr, cols);\r\n    onGenerateNewBlocks(blockArr);\r\n    onCheckIfCanMove(blockArr);\r\n  };\r\n\r\n  return <StyledBox color={props.color} onClick={clickHandler}></StyledBox>;\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    cols: state.cols,\r\n    blockArr: state.blockArr,\r\n    score: state.score,\r\n    move: state.move,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onDelete: (id, arr, score) => {\r\n      dispatch(actions.deleteBox(id, arr, score));\r\n    },\r\n    onUpdateScore: (arr, prevScore) => {\r\n      dispatch(actions.updateScore(arr, prevScore));\r\n    },\r\n    onMoveBlocksDown: (arr, cols) => {\r\n      dispatch(actions.moveBlocksDown(arr, cols));\r\n    },\r\n    onGenerateNewBlocks: (arr) => {\r\n      dispatch(actions.generateNewBlocks(arr));\r\n    },\r\n    onCheckIfCanMove: (arr) => {\r\n      dispatch(actions.checkIfCanMove(arr));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Box);\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledScore = styled.div`\r\n  p {\r\n    color: #000;\r\n    font-size: 2.2rem;\r\n  }\r\n`;\r\n\r\nconst Score = (props) => {\r\n  return (\r\n    <StyledScore>\r\n      <p>score:{props.score}</p>\r\n    </StyledScore>\r\n  );\r\n};\r\nexport default Score;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledBackdrop = styled.div`\r\n  position: absolute;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n\r\n`;\r\n\r\nconst Backdrop = () => {\r\n  return <StyledBackdrop></StyledBackdrop>;\r\n};\r\n\r\nexport default Backdrop;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Backdrop from \"../components/Backdrop\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../store/actions/index\";\r\n\r\nconst StyledModal = styled.div`\r\n  border-radius: 5px;\r\n  padding: 1rem;\r\n  position: absolute;\r\n  background-color: white;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 100;\r\n  p{\r\n    margin:1rem 0;\r\n  }\r\n  button {\r\n    border: none;\r\n    background-color: transparent;\r\n    padding: 0.5rem;\r\n    cursor: pointer;\r\n    i{\r\n      font-size:1.2rem;\r\n    }\r\n    &:hover {\r\n      transform: rotate(360deg);\r\n      transition: transform ease-in-out 0.4s;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Modal = (props) => {\r\n  const { onPopulateBoard, onRestartGame, score, rows, cols } = props;\r\n\r\n  const restartGame = () => {\r\n    onRestartGame();\r\n    onPopulateBoard(rows, cols);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Backdrop />\r\n      <StyledModal>\r\n        <h1>Game Over</h1>\r\n        <p>Your score: {score}</p>\r\n        <button onClick={restartGame}>\r\n          <i className=\"fas fa-sync-alt\"></i>\r\n        </button>\r\n      </StyledModal>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    score: state.score,\r\n    rows: state.rows,\r\n    cols: state.cols,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onPopulateBoard: (rows, cols) => {\r\n      dispatch(actions.populateBoard(rows, cols));\r\n    },\r\n    onRestartGame: () => {\r\n      dispatch(actions.restartGame());\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Modal);\r\n","import React, { useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { connect } from \"react-redux\";\r\nimport Box from \"./Box\";\r\nimport * as actions from \"../store/actions/index\";\r\nimport Score from \"../components/Score\";\r\nimport Modal from \"./Modal\";\r\n\r\nconst StyledBoard = styled.div`\r\n  display: grid;\r\n  grid-gap: 2px;\r\n  grid-template-columns: repeat(${(props) => props.cols && props.cols}, 1fr);\r\n  grid-template-rows: repeat(${(props) => props.rows && props.rows}, 1fr);\r\n`;\r\n\r\nconst Board = (props) => {\r\n  const {\r\n    onPopulateBoard,\r\n    onCheckIfCanMove,\r\n    rows,\r\n    cols,\r\n    blockarr,\r\n    move,\r\n    score\r\n  } = props;\r\n\r\n  useEffect(() => {\r\n    onPopulateBoard(rows, cols);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (blockarr.length > 0) {\r\n      onCheckIfCanMove(blockarr);\r\n    }\r\n  }, [blockarr]);\r\n\r\n  const showModal = () => {\r\n    if (move === false) {\r\n      return <Modal />;\r\n    }\r\n  };\r\n\r\n  let blocks;\r\n\r\n  blocks = blockarr.map((element) => {\r\n    return <Box key={element.id} id={element.id} color={element.color} />;\r\n  });\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <StyledBoard rows={rows} cols={cols}>\r\n        {blocks}\r\n      </StyledBoard>\r\n      <Score score={score}/>\r\n      {showModal()}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    rows: state.rows,\r\n    cols: state.cols,\r\n    blockarr: state.blockArr,\r\n    move: state.move,\r\n    score: state.score,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onPopulateBoard: (rows, cols) => {\r\n      dispatch(actions.populateBoard(rows, cols));\r\n    },\r\n    onCheckIfCanMove: (arr) => {\r\n      dispatch(actions.checkIfCanMove(arr));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Board);\r\n","import React from 'react';\nimport Board from './containers/Board';\nimport styled from \"styled-components\";\n\nconst StyledApp = styled.div`\n  width:100%;\n  height:100vh;\n  display:flex;\n  flex-direction:column;\n  justify-content:center;\n  align-items:center;\n  background-color: #eee;\n`\n\nfunction App() {\n  return (\n    <StyledApp >\n      <Board/>\n    </StyledApp>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as actionTypes from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  rows: 5,\r\n  cols: 12,\r\n  blockArr: [],\r\n  move: null,\r\n  score: 0,\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.POPULATE_BOARD:\r\n      return {\r\n        ...state,\r\n        blockArr: action.arr,\r\n      };\r\n    case actionTypes.BOX_DELETE:\r\n      return {\r\n        ...state,\r\n        blockArr: action.arr,\r\n        move: action.move,\r\n      };\r\n    case actionTypes.UPDATE_SCORE:\r\n      return {\r\n        ...state,\r\n        score: action.score,\r\n        move: action.move,\r\n      };\r\n    case actionTypes.MOVE_BLOCKS_DOWN:\r\n      return {\r\n        ...state,\r\n        blockArr: action.arr,\r\n        move: action.move,\r\n      };\r\n    case actionTypes.GENERATE_NEW_BLOCKS:\r\n      return {\r\n        ...state,\r\n        blockArr: action.arr,\r\n        move: action.move,\r\n      };\r\n    case actionTypes.CHECK_IF_CAN_MOVE:\r\n      return {\r\n        ...state,\r\n        move: action.move,\r\n      };\r\n    case actionTypes.RESTART_GAME:\r\n      return {\r\n        ...state,\r\n        blockArr: [],\r\n        move: null,\r\n        score: 0,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport reducer from \"./store/reducer/reducer\";\nimport { createStore} from \"redux\";\nimport { Provider } from \"react-redux\";\n\nconst store = createStore(\n  reducer, /* preloadedState, */\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}